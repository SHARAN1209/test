@Service
public class RuleAppService {

    @Autowired
    private RestConnector restConnector;

    private static final Logger logger = LoggerFactory.getLogger(RuleAppService.class);

    /**
     * Fetches lookup table details from RuleApp based on group names.
     */
    public List<LookUpTableResponse> getLookUpTablesByGroups(List<String> groups) {
        List<LookUpTableResponse> response = null;

        try {
            String name = "ruleAppGetTablesByGroups";
            String enableRuleApp = OPAUtils.getEnbleRuleApp(name);
            String accessToken;
            String url;
            String method;

            // Decide whether to use RuleApp configuration or default configuration
            if (Boolean.parseBoolean(enableRuleApp)) {
                accessToken = loginRuleApp();
                url = OPAUtils.getURLRuleApp(name);
                method = OPAUtils.getMethodRuleApp(name);
            } else {
                accessToken = login();
                url = OPAUtils.getURL(name);
                method = OPAUtils.getMethod(name);
            }

            logger.info("Calling RuleApp API: {} with method: {}", url, method);

            // Prepare headers
            HttpHeaders headers = new HttpHeaders();
            headers.set(HttpHeaders.AUTHORIZATION, "Bearer " + accessToken);
            headers.set(HttpHeaders.CONTENT_TYPE, "application/json");

            // Call using central restConnector
            response = restConnector.connect(
                url,
                HttpMethod.valueOf(method),
                headers,
                groups,
                new ParameterizedTypeReference<List<LookUpTableResponse>>() {}
            );

            logger.info("Successfully retrieved {} lookup tables", 
                        response != null ? response.size() : 0);

        } catch (SpirException spirException) {
            logger.error("Error while connecting to RuleApp API: {}", spirException.getMessage(), spirException);
            throw new SpirException(ErrorCodes.ERR_O003, "Error while connecting to RuleApp Lookup Tables REST Service.");
        } catch (Exception e) {
            logger.error("Unexpected error while calling RuleApp API: {}", e.getMessage(), e);
            throw new SpirException(ErrorCodes.ERR_C003, "Unexpected error while connecting to RuleApp Lookup Tables REST Service.");
        }

        return response;
    }

    private String loginRuleApp() {
        // Logic to get RuleApp access token
        return "mock-token-ruleapp"; 
    }

    private String login() {
        // Logic to get default access token
        return "mock-token-default";
    }
}
